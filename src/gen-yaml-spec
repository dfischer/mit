#!/usr/bin/env python3
# Generate YAML spec.
#
# (c) Mit authors 2020
#
# The package is distributed under the MIT/X11 License.
#
# THIS PROGRAM IS PROVIDED AS IS, WITH NO WARRANTY. USE IS AT THE USERâ€™S
# RISK.

from yaml import dump

from code_util import Code, copyright_banner, unrestrict
from spec import Register, MitErrorCode, Instructions, ExtraInstructions


GENERATOR_PROGRAM = 'gen-yaml-spec'
PURPOSE = 'Mit virtual machine specification.'
COPYRIGHT_YEARS = '1994-2020'

code = copyright_banner(GENERATOR_PROGRAM, PURPOSE, COPYRIGHT_YEARS, comment='#')
code.append('')
print(code)

# Write YAML description.
# TODO: When we have PyYAML 5.1, use sort_keys=False
# FIXME: Make the classes dumped directly representable
def action_spec(i):
    spec = {'opcode': i.opcode}
    if i.action.effect is not None:
        spec['args'] = [item.name for item in i.action.effect.args.items]
        spec['results'] = [item.name for item in i.action.effect.results.items]
    return spec

def instruction_spec(i):
    spec = action_spec(i)
    spec['terminal'] = i.action.terminal_action is not None
    return spec

print(dump({
    'ErrorCode': {e.name: e.value for e in MitErrorCode},
    'Register': [r.name for r in Register],
    'Instructions': {i.name: instruction_spec(i) for i in Instructions},
    'ExtraInstructions': {i.name: action_spec(i) for i in ExtraInstructions},
}), end='')
