#!/usr/bin/env python3
# Generate code for extra instructions.
#
# (c) Mit authors 1994-2019
#
# The package is distributed under the MIT/X11 License.
#
# THIS PROGRAM IS PROVIDED AS IS, WITH NO WARRANTY. USE IS AT THE USERâ€™S
# RISK.

from mit_core.ext import *
from mit_core.instruction_gen import *

# Write the output file
print(includes)

print('''
#include "mit/ext-opcodes.h"

enum {
    MIT_ERR_EXT_INVALID_LIBRARY = 16,
    MIT_ERR_EXT_INVALID_FUNCTION = 17,
};

#define RAISE(code)                         \\
    return (code);                          \\
''')

for lib in LibInstruction:
    print('''\
static int extra_{}(mit_state *S, mit_WORD opcode)
{{'''.format(str.lower(lib.name)))
    print(dispatch(
        lib.library,
        '{}_'.format(lib.name),
        '            RAISE(MIT_ERR_EXT_INVALID_FUNCTION);'))
    print('''
    return MIT_ERR_OK;
}
''')

print('''
int mit_ext(mit_state *S)
{
    mit_WORD opcode;
    {
        int ret = pop_stack(S, &opcode);
        if (ret != 0)
            RAISE(ret);
    }
''')

print(dispatch(
    LibInstruction,
    '',
    '\n            return MIT_ERR_EXT_INVALID_LIBRARY;',
))

print('''
    return MIT_ERR_OK;
}''')
