#!/usr/bin/env python3
# Calculate type sizes for extra instructions.
#
# (c) Mit authors 2019
#
# The package is distributed under the MIT/X11 License.
#
# THIS PROGRAM IS PROVIDED AS IS, WITH NO WARRANTY. USE IS AT THE USERâ€™S
# RISK.

import re

from mit_core.code_util import Code
import mit_core.instruction_gen
mit_core.instruction_gen.TYPE_SIZE_UNKNOWN = 0

from extra_instructions import LibInstruction


code = Code()
code.append('''\
# Auto-generated by gen-type-sizes - DO NOT EDIT.
AC_INIT([type-sizes], [0.1])
ac_includes_default="\\
#include \\"config.h\\"
''')
for lib in LibInstruction:
    code.append(re.sub('"', '\\"', lib.includes))
code.append('"')
for type in list(set([type for lib in LibInstruction
                      for type in lib.types()])):
    code.append('AC_CHECK_SIZEOF([{}])'.format(type))

# We don't need this header, but autoconf insists we define it.
code.append('AC_CONFIG_HEADERS([type-sizes.h])')

print(code)
