#!/usr/bin/env python3
#
# Copyright (c) 2018-2019 Mit authors
#
# The package is distributed under the MIT/X11 License.
#
# THIS PROGRAM IS PROVIDED AS IS, WITH NO WARRANTY. USE IS AT THE USERâ€™S
# RISK.

import sys
import argparse
from pprint import pprint

from mit_core.vm_data import Instruction
from mit_core.opcode_frequency import counts


# Command-line arguments
parser = argparse.ArgumentParser(
    prog='opcode-frequency',
    description='Count the frequency of opcodes in a predictor.',
)
parser.add_argument('-n', '--topmost', type=int, metavar='N',
                    help='only output topmost N frequencies')
parser.add_argument('file', metavar='FILE')
args = parser.parse_args()

# Compute frequencies
with open(args.file) as predictor_file:
    freqs = counts(Instruction, predictor_file)

# Truncate list if desired
if args.topmost is not None:
    freqs = freqs[:args.topmost]

# Output frequencies, with instruction names instead of instructions
pprint([(count, instruction.name) for count, instruction in freqs])
