#!/usr/bin/env python3
# Generate extra instruction opcodes list.
#
# (c) Mit authors 2018-2019
#
# The package is distributed under the MIT/X11 License.
#
# THIS PROGRAM IS PROVIDED AS IS, WITH NO WARRANTY. USE IS AT THE USERâ€™S
# RISK.

from mit_core.code_util import Code, copyright_banner, enum_to_c
import mit_core.stack
mit_core.stack.TYPE_SIZE_UNKNOWN = 0

from extra_instructions import *
from extra_errors import RegisterArgsErrorCode


GENERATOR_PROGRAM = 'gen-extra-opcodes'
PURPOSE = 'Extra instruction opcodes.'
COPYRIGHT_YEARS = '2018-2019'

code = copyright_banner(GENERATOR_PROGRAM, PURPOSE, COPYRIGHT_YEARS)
code.append('''
#ifndef MIT_EXTRA_OPCODES
#define MIT_EXTRA_OPCODES


#define INSTRUCTION(name, opcode) name = opcode,
''')
code.append('')
code.extend(enum_to_c(LibInstruction, lambda i: i.value[0]))
code.append('')
for lib_instruction in LibInstruction:
    code.extend(enum_to_c(lib_instruction.library, lambda i: i.value[0]))
    code.append('')
code.append('#undef INSTRUCTION')
code.append('')
code.extend(enum_to_c(RegisterArgsErrorCode))
code.append('')
code.append('#endif')

print(code)
