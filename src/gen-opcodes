#!/usr/bin/env python3
# Generate instructions opcode list.
#
# (c) Mit authors 2018-2019
#
# The package is distributed under the MIT/X11 License.
#
# THIS PROGRAM IS PROVIDED AS IS, WITH NO WARRANTY. USE IS AT THE USER’S
# RISK.

from mit_core.code_buffer import Code
from mit_core.vm_data import (
    Instruction, InternalExtraInstruction,
    ExecutionError,
)
from mit_core.errors import MallocError, LoadError, SaveError
from mit_core.enum_util import enum_to_c


code = Code()
code.append('''\
// Auto-generated by gen-opcodes - DO NOT EDIT.
//
// Instruction opcodes.
//
// (c) Mit authors 2018-2019
//
// The package is distributed under the MIT/X11 License.
//
// THIS PROGRAM IS PROVIDED AS IS, WITH NO WARRANTY. USE IS AT THE USER’S
// RISK.

#ifndef MIT_OPCODES
#define MIT_OPCODES


''')
code.append('')
code.extend(enum_to_c(Instruction, 'O_'))
code.append('')
code.extend(enum_to_c(InternalExtraInstruction, 'O_EXTRA_'))
code.append('')
code.extend(enum_to_c(ExecutionError, 'MIT_ERROR_'))
code.append('')
code.extend(enum_to_c(MallocError, 'MIT_MALLOC_ERROR_'))
code.append('')
code.extend(enum_to_c(LoadError, 'MIT_LOAD_ERROR_'))
code.append('')
code.extend(enum_to_c(SaveError, 'MIT_SAVE_ERROR_'))
code.append('')
code.append('#endif')

print(code.unindented_str())
